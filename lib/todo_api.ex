defmodule TodoApi do
  @moduledoc """
  TodoApi keeps the contexts that define your domain
  and business logic.

  Contexts are also responsible for managing your data, regardless
  if it comes from the database, an external API or others.
  """
  # Context modules are usually placed in the lib/todo_api directory
  # and not directly in lib/todo_api.ex, plus context is usually plural
  # So it would have been Todos for the schema of Todo
  # list_todos/0, list_todos/1
  # get_todo!/1, get_todo/1
  # create_todo/1
  # update_todo/2
  # delete_todo/1
  # All of these functions would be generated by `mix phx.gen.context`
  # the only thing would be left for you to do is to implement the filtering logic in list_todos/1



  # def list_todos(params \\ %{}) do
  #   Todo
  #   |> filter_by_completed(params)
  #   |> filter_by_priority(params)
  #   |> Repo.all()
  # end


  # defp filter_by_completed(query, %{"completed" => completed?}) when is_boolean(completed?) do
  #   where(query, [t], t.completed == ^completed?)
  # end

  # defp filter_by_completed(query, _), do: query


  # defp filter_by_priority(query, %{"priority" => priority}) do
  #   where(query, [t], t.priority == ^priority)
  # end

  # defp filter_by_priority(query, _), do: query

end
